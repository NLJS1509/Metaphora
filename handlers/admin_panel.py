from aiogram import types, Dispatcher

import bd
import kb
from state import UserState


async def admin(msg: types.Message):
    await msg.answer('–í–≤–µ–¥–∏—Ç–µ –∞–¥–º–∏–Ω-–ø–∞—Ä–æ–ª—å:')
    await UserState.password.set()


async def admin_panel(msg: types.Message):
    await msg.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä üëæ\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å', reply_markup=kb.m_panel)
    await UserState.admin_stat.set()


async def stat(msg: types.Message):
    await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å', reply_markup=kb.s_panel)
    await UserState.select_stat.set()


async def all_users(msg: types.Message):
    a = bd.getting_the_nuber_of_users(0)
    await msg.answer(f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>{a}</b>', parse_mode="HTML")


async def usage(msg: types.Message):
    await msg.answer(
        f'<i>–û—Å–Ω–æ–≤–Ω–∞—è</i> –≤–µ—Ç–∫–∞ –±—ã–ª–∞ –ø—Ä–æ–π–¥–µ–Ω–∞:\n<b>?</b> —Ä–∞–∑ –∑–∞ –¥–µ–Ω—å\n<b>?</b> —Ä–∞–∑ –∑–∞ –Ω–µ–¥–µ–ª—é\n<b>?</b> —Ä–∞–∑ –∑–∞ –º–µ—Å—è—Ü',
        parse_mode='HTML')
    await msg.answer(
        f'–í–µ—Ç–∫–∞ <i>"–ö–∞—Ä—Ç–∞ –¥–Ω—è"</i> –±—ã–ª–∞ –ø—Ä–æ–π–¥–µ–Ω–∞:\n<b>?</b> —Ä–∞–∑ –∑–∞ –¥–µ–Ω—å\n<b>?</b> —Ä–∞–∑ –∑–∞ –Ω–µ–¥–µ–ª—é\n<b>?</b> —Ä–∞–∑ –∑–∞ –º–µ—Å—è—Ü',
        parse_mode='HTML')


async def unik(msg: types.Message):
    await msg.answer(f'<i>–û—Å–Ω–æ–≤–Ω—É—é</i> –≤–µ—Ç–∫—É –ø–æ—Å–µ—Ç–∏–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è <b>?</b> —Ä–∞–∑', parse_mode='HTML')
    await msg.answer(f'–í–µ—Ç–∫—É <i>"–ö–∞—Ä—Ç–∞ –¥–Ω—è"</i> –ø–æ—Å–µ—Ç–∏–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è <b>?</b> —Ä–∞–∑', parse_mode='HTML')


async def new(msg: types.Message):
    await msg.answer(f'–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n<b>?</b> –∑–∞ –¥–µ–Ω—å\n<b>?</b> –∑–∞ –Ω–µ–¥–µ–ª—é\n<b>?</b> –∑–∞ –º–µ—Å—è—Ü',
                     parse_mode='HTML')


async def regular(msg: types.Message):
    await msg.answer(f'–†–µ–≥—É–ª—è—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>?</b>', parse_mode='HTML')


async def go_channel(msg: types.Message):
    await msg.answer(f'–ü–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∫–∞–Ω–∞–ª <b>?</b>', parse_mode='HTML')


async def back(msg: types.Message):
    await msg.answer('–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å', reply_markup=kb.m_panel)
    await UserState.admin_stat.set()


async def all_stat(msg: types.Message):
    await msg.answer(f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>{a}</b>\n\n'
                     f'<i>–û—Å–Ω–æ–≤–Ω–∞—è</i> –≤–µ—Ç–∫–∞ –±—ã–ª–∞ –ø—Ä–æ–π–¥–µ–Ω–∞:\n<b>?</b> —Ä–∞–∑ –∑–∞ –¥–µ–Ω—å\n<b>?</b> —Ä–∞–∑ –∑–∞ –Ω–µ–¥–µ–ª—é\n<b>?</b> —Ä–∞–∑ –∑–∞ –º–µ—Å—è—Ü\n'
                     f'–í–µ—Ç–∫–∞ <i>"–ö–∞—Ä—Ç–∞ –¥–Ω—è"</i> –±—ã–ª–∞ –ø—Ä–æ–π–¥–µ–Ω–∞:\n<b>?</b> —Ä–∞–∑ –∑–∞ –¥–µ–Ω—å\n<b>?</b> —Ä–∞–∑ –∑–∞ –Ω–µ–¥–µ–ª—é\n<b>?</b> —Ä–∞–∑ –∑–∞ –º–µ—Å—è—Ü\n\n'
                     f'<i>–û—Å–Ω–æ–≤–Ω—É—é</i> –≤–µ—Ç–∫—É –ø–æ—Å–µ—Ç–∏–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è <b>?</b> —Ä–∞–∑\n'
                     f'–í–µ—Ç–∫—É <i>"–ö–∞—Ä—Ç–∞ –¥–Ω—è"</i> –ø–æ—Å–µ—Ç–∏–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è <b>?</b> —Ä–∞–∑\n\n'
                     f'–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n<b>?</b> –∑–∞ –¥–µ–Ω—å\n<b>?</b> –∑–∞ –Ω–µ–¥–µ–ª—é\n<b>?</b> –∑–∞ –º–µ—Å—è—Ü\n\n'
                     f'–†–µ–≥—É–ª—è—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>?</b>\n\n'
                     f'–ü–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∫–∞–Ω–∞–ª <b>?</b>', parse_mode='HTML')

def register_handler_admin_panel(dp: Dispatcher):
    dp.register_message_handler(admin, state='*', commands=['admin'])
    dp.register_message_handler(admin_panel, state=UserState.password, text='–ö–æ—Ç –≤ –∑–∏–º–Ω–∏—Ö —Å–∞–ø–æ–≥–∞—Ö')
    dp.register_message_handler(stat, state=UserState.admin_stat, text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    dp.register_message_handler(all_users, state=UserState.select_stat, text='–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    dp.register_message_handler(usage, state=UserState.select_stat, text='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π')
    dp.register_message_handler(unik, state=UserState.select_stat, text='–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö')
    dp.register_message_handler(new, state=UserState.select_stat, text='–ù–æ–≤—ã—Ö')
    dp.register_message_handler(regular, state=UserState.select_stat, text='–†–µ–≥—É–ª—è—Ä–Ω—ã—Ö')
    dp.register_message_handler(go_channel, state=UserState.select_stat, text='–ü–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∫–∞–Ω–∞–ª')
    dp.register_message_handler(back, state=UserState.select_stat, text='–ù–∞–∑–∞–¥')
    dp.register_message_handler(all_stat, state=UserState.select_stat, text='–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
